def checkUserProperty(String propertyName) {
	if (!project.hasProperty(propertyName)) {
		throw new GradleException('Property "' + propertyName + '" not defined, this should be defined in your "<USER_HOME>/.gradle/gradle.properties" file or on the command line using the -P flag.')
	}
}

checkUserProperty('maven_user')
checkUserProperty('maven_url')

ext.set('quantexa_explorer_releases', maven_url + "/quantexa-explorer-releases/")
ext.set('quantexa_explorer_snapshots', maven_url + "/quantexa-explorer-snapshots/")


apply plugin: 'scala'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'nu.studer.credentials'

sourceCompatibility = 1.8
targetCompatibility = 1.8

String maven_password = credentials.maven_password
ext.set('nexusUsername', maven_user)
ext.set('nexusPassword', maven_password)

buildscript {
	repositories {
		maven { url 'https://dl.bintray.com/ilyaai/maven' }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	
	dependencies {
		classpath ("com.github.jengelman.gradle.plugins:shadow:5.0.0")
		classpath ("com.bmuschko:gradle-nexus-plugin:2.3.1")
		classpath ('nu.studer:gradle-credentials-plugin:1.0.4')
	}
}

ext.set('quantexa_gradle_plugins_releases', maven_url + "/quantexa-gradle-plugins-releases/")
ext.set('quantexa_gradle_plugins_snapshots', maven_url + "/quantexa-gradle-plugins-snapshots/")
ext.set('quantexa_releases', maven_url + "/quantexa-releases/")

repositories {
	mavenCentral()
	maven { url quantexa_gradle_plugins_releases }
	maven { url quantexa_releases }
    maven {
        url quantexa_explorer_releases
    }
    maven {
        url quantexa_explorer_snapshots
    }
}

dependencies {
	compile("com.quantexa:eng-spark-core_2.11:$version")

	compile("com.google.guava:guava:18.0")
	compile("com.typesafe:config:1.3.0")
	compile("com.typesafe.scala-logging:scala-logging-slf4j_2.11:2.1.2")
	compile("com.typesafe.scala-logging:scala-logging_2.11:3.4.0")
}

configurations {
    runtime.exclude module: 'spark-core_2.11'
	runtime.exclude module: 'spark-sql_2.11'
	runtime.exclude module: 'spark-yarn_2.11'
	runtime.exclude module: 'spark-hive_2.11'
    runtime.exclude module: 'spark-graphx_2.11'
    runtime.exclude module: 'scala-xml_2.11'
    runtime.exclude module: 'scala-parser-combinators_2.11'
    runtime.exclude module: 'scala-library'
    runtime.exclude module: 'scala-reflect'
}

shadowJar {
    zip64=true
    mergeServiceFiles()
    baseName = "quantexa-eng-spark-core-shadow_2.11"
	version = "$version"
	relocate 'org.joda', 'com.quantexa.shadow.joda'
	relocate 'com.google.guava', 'com.quantexa.shadow.google.guava'
	relocate 'com.google.common', 'com.quantexa.shadow.google.common'
	relocate 'com.typesafe', 'com.quantexa.shadow.typesafe'
	relocate 'com.google.thirdparty', 'com.quantexa.shadow.google.thirdparty'
	relocate 'com.fasterxml.jackson', 'com.quantexa.shadow.fasterxml.jackson'
}

artifacts{
  archives shadowJar
}

extraArchive {
    sources = false
    tests = false
    javadoc = false
}

nexus {
	sign = false
	repositoryUrl = quantexa_explorer_releases
	snapshotRepositoryUrl = quantexa_explorer_snapshots
}
