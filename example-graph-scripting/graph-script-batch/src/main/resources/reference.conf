graphscript {
  timeouts = {
    elasticTimeout = 15 s
    internalResolverTimeout = 60 s
    stageTimeout = 30 s
    resolverResponseTimeout = 70 s
    scoringResponseTimeout = 15 s
    documentResponseTimeout = 30 s
    taskResponseTimeout = 30 s
    investigationResponseTimeout = 30 s
    searchResponseTimeout = 30 s
  }

  resolverConfigPath = "/Config/resolver-config-fiu-smoke.json"
  username = "quantexa-demo"
  password = "xPlor3r"
  gatewayUri = "http://localhost:8080"

  oneHopStage = {
    inputPath = "/Data/GraphScriptInput/documentIdInputs.parquet"
    outputPath = "/Data/GraphScriptOutput/oneHopStage/oneHop.parquet"
    checkpoint = true
    datasetRetries = 3
  }
  twoHopIndividualsOnlyStage = {
    inputPath = "/Data/GraphScriptInput/documentIdInputs.parquet"
    outputPath = "/Data/GraphScriptOutput/twoHopIndividualsOnlyStage/customerTwoHop.parquet"
    checkpoint = true
  }
  filterHighScoresStage = {
    inputPath = ""
    outputPath = ""
    checkpoint = true
  }
  linkedRiskyAddressesStage = {
    inputPath = ""
    outputPath = "/Data/GraphScriptOutput/linkedRiskyAddressesStage/riskyAddressNetworks.parquet"
    checkpoint = true
  }
  loadInvestigationStage = {
    inputPath = "/Data/GraphScriptOutput/linkedRiskyAddressesStage/riskyAddressNetworks.parquet"
    outputPath = "/Data/GraphScriptOutput/loadInvestigationStage/loadedInvestigations.parquet"
    checkpoint = true
  }
  scoreCustomerOneHopNetworkStage = {
    inputPath = "/Data/GraphScriptInput/documentIdInputs.parquet"
    outputPath = "/Data/GraphScriptOutput/scoreCustomerOneHopNetworkStage/scoredGraphs.parquet"
    checkpoint = true
  }
  loadTaskStage = {
    inputPath = ""
    outputPath = "/Data/GraphScriptOutput/loadTaskStage/loadedtasks.parquet"
    checkpoint = true
    taskListId = null
  }
},

bulkloader {
  oneHopStage = {
    inputPath = "/Data/GraphScriptInput/oneHopStage/inputs.parquet"
    outputPath = "/Data/GraphScriptBulkOutput/oneHopStage/customeronehop.parquet"
    checkpoint = false
    retries = 3
  }
  url = "http://localhost:8080"
  username = "svc-graph-script"
  password = "Qu@rk123"
  sslEnabled = true
},

elastic {
  hdfsRoot = "/Data/GraphScriptOutput/oneHopStage/customeronehop.parquet"
  index: {
    name = "graph-script-test"
  }
  elasticNodes: {
    searchNodes = ["10.36.64.99:9200"]
    resolverNodes = ["10.36.64.99:9200"]
  }
}