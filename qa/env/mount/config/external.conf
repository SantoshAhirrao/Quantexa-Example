environment {
	fileSystemRoot = ${WORKSPACE}"/qa/env/mount/etlengoutput"
	scoringLookupRoot = ${environment.fileSystemRoot}"/scoring/raw"
}

incrementalMode.runId = "ci-test"
conventions.lookupsInputPath:${WORKSPACE}"/qa/env/mount/data/scoring"

elastic {
	customer {
		elasticNodes: {
			searchNodes = ["elastic.toothless.svc.cluster.local:9200"]
			resolverNodes = ["elastic.toothless.svc.cluster.local:9200"]
		}
		index {
			prefix = "ci-test"
			name = "customer"
			shards = 2
			replicas = 0
		}
	},
	hotlist {
		elasticNodes: {
			searchNodes = ["elastic.toothless.svc.cluster.local:9200"]
			resolverNodes = ["elastic.toothless.svc.cluster.local:9200"]
		}
		index {
			prefix = "ci-test"
			name = "hotlist"
			shards = 2
			replicas = 0
		}
	},
	transaction {
		elasticNodes: {
			searchNodes = ["elastic.toothless.svc.cluster.local:9200"]
			resolverNodes = ["elastic.toothless.svc.cluster.local:9200"]
		}
		index {
			prefix = "ci-test"
			name = "transaction"
			shards = 2
			replicas = 0
		}
	},
	research {
		elasticNodes: {
			searchNodes = ["elastic.toothless.svc.cluster.local:9200"]
			resolverNodes = ["elastic.toothless.svc.cluster.local:9200"]
		}
		index {
			prefix = "ci-test"
			name = "research"
			shards = 2
			replicas = 0
		}
	},
	txnscoretocustomerrollup {
		elasticNodes = {
			searchNodes = ["elastic.toothless.svc.cluster.local:9200"]
			resolverNodes = ["elastic.toothless.svc.cluster.local:9200"]
		}
		index {
			name = "ci-test-txnscoretocustomerrollup"
			shards = 2
			replicas = 0
		}
		otherOptions = {
			"fullPathToParquet": ${environment.fileSystemRoot}"/scoring/Document/TransactionFacts_TransactionScoreOutput_CustomerKey_Rollup"
		}
		hdfsRoot = ${environment.fileSystemRoot}
	},
	txncustomerdatescoretocustomerrollup {
		elasticNodes = {
			searchNodes = ["elastic.toothless.svc.cluster.local:9200"]
			resolverNodes = ["elastic.toothless.svc.cluster.local:9200"]
		}
		index {
			name = "ci-test-txncustomerdatescoretocustomerrollup"
			shards = 2
			replicas = 0
		}
		otherOptions = {
			"fullPathToParquet": ${environment.fileSystemRoot}"/scoring/Document/CustomerDateFacts_CustomerDateScoreOutput_CustomerKey_Rollup"
		}
		hdfsRoot = ${environment.fileSystemRoot}
	}
}

scoring {
	fiu {
		name: "Default Scoring Config"
		documentType: "customer"
		hdfsFolder: ${environment.fileSystemRoot}
		hdfsFolderCustomer: ${scoring.fiu.hdfsFolder}/customer/${incrementalMode.runId}
		hdfsFolderHotlist: ${scoring.fiu.hdfsFolder}/hotlist
		hdfsFolderTransactions: ${scoring.fiu.hdfsFolder}/transaction/${incrementalMode.runId}
		hdfsFolderScoring: ${scoring.fiu.hdfsFolder}/scoring
		hdfsFolderCountryCorruption: ${scoring.fiu.hdfsFolderScoring}
		runDate = "2017-08-01"
		scoreParameterFile = {
			filePath = "./parameterFile.csv"
			classpath = false
		}
		elasticSettings {
			esClusterName: "toothless"
			esNodeIps: "elastic.toothless.svc.cluster.local"
			esPort: "9200"
		}
		highRiskCountryCodesLookup {
			path: ${environment.scoringLookupRoot}"/csv/highRiskCountryCodes.csv"
			format: "csv"
			indexName: "fiu-smoke"
			documentType: "riskcountrycodelookup"
			idField: "riskCountryCode"
		}
		postcodePricesLookup {
			path: ${environment.scoringLookupRoot}"/csv/postcodePrices.csv"
			format: "csv"
			indexName: "fiu-smoke"
			documentType: "postcodepriceslookup"
			idField: "postcode"
		}
		txnscoretocustomerrollup {
			path: ""
			format: "elastic"
			indexName: "ci-test-txnscoretocustomerrollup"
			documentType: "default"
			idField: "subject"
		}
		txncustomerdatescoretocustomerrollup {
			path: ""
			format: "elastic"
			indexName: "ci-test-txncustomerdatescoretocustomerrollup"
			documentType: "default"
			idField: "subject"
		}
	}
}